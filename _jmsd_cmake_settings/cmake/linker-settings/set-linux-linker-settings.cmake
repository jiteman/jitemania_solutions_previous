include( ${JMSD_CMAKE_SETTINGS_PATH}/set-verbosity-configuration.cmake )

JMSD_CMAKE_CURRENT_FILE_IN( "set-linux-linker-settings.cmake" )

if ( UNIX )
	set( JMSD_CMAKE_CXX_FLAGS "" )
	set( JMSD_CMAKE_CXX_FLAGS_DEBUG "" )
	set( JMSD_CMAKE_CXX_FLAGS_RELEASE "" )

	set( JMSD_CMAKE_SHARED_LINKER_FLAGS "" )
	set( JMSD_CMAKE_EXE_LINKER_FLAGS "" )

	#QMAKE_LFLAGS_RELEASE -= -Wl,-O1
	#QMAKE_LFLAGS_RELEASE -= -Wl,-O2
	#QMAKE_LFLAGS_RELEASE += -Wl,-O3

	string( REPLACE ";" " " JMSD_CMAKE_LINKER_FLAGS_STR "${JMSD_CMAKE_LINKER_FLAGS}" )
	string( REPLACE ";" " " JMSD_CMAKE_LINKER_FLAGS_DEBUG_STR "${JMSD_CMAKE_LINKER_FLAGS_DEBUG}" )
	string( REPLACE ";" " " JMSD_CMAKE_LINKER_FLAGS_RELEASE_STR "${JMSD_CMAKE_LINKER_FLAGS_RELEASE}" )
	string( REPLACE ";" " " JMSD_CMAKE_SHARED_LINKER_FLAGS_STR "${JMSD_CMAKE_SHARED_LINKER_FLAGS}" )
	string( REPLACE ";" " " JMSD_CMAKE_EXE_LINKER_FLAGS_STR "${JMSD_CMAKE_EXE_LINKER_FLAGS}" )

	set( CMAKE_SHARED_LINKER_FLAGS "" )
	set( CMAKE_SHARED_LINKER_FLAGS_DEBUG "" )
	set( CMAKE_SHARED_LINKER_FLAGS_RELEASE "" )
	set( CMAKE_EXE_LINKER_FLAGS "" )
	set( CMAKE_EXE_LINKER_FLAGS_DEBUG "" )
	set( CMAKE_EXE_LINKER_FLAGS_RELEASE "" )

	set( JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS "" )
	list( APPEND JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined" )
	list( APPEND JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS "-Wl,--unresolved-symbols=report-all" ) # ignore-in-object-files
##	list( APPEND JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS "-Wl,--no-allow-shlib-undefined" )
	list( APPEND JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS "-z defs" )

	string( REPLACE ";" " " JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS_STR "${JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS}" )

	if ( JMSD_CMAKE_DEBUG )
		set( CMAKE_SHARED_LINKER_FLAGS "${JMSD_CMAKE_LINKER_FLAGS_STR} ${JMSD_CMAKE_LINKER_FLAGS_DEBUG_STR} ${JMSD_CMAKE_SHARED_LINKER_FLAGS_STR} ${JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS_STR}" )
		set( CMAKE_EXE_LINKER_FLAGS "${JMSD_CMAKE_LINKER_FLAGS_STR} ${JMSD_CMAKE_LINKER_FLAGS_DEBUG_STR} ${JMSD_CMAKE_EXE_LINKER_FLAGS_STR}" )

	elseif ( JMSD_CMAKE_RELEASE )
		set( CMAKE_SHARED_LINKER_FLAGS "${JMSD_CMAKE_LINKER_FLAGS_STR} ${JMSD_CMAKE_LINKER_FLAGS_RELEASE_STR} ${JMSD_CMAKE_SHARED_LINKER_FLAGS_STR} ${JMSD_ADDITIONAL_MAKE_SHARED_LINKER_FLAGS_STR}" )
		set( CMAKE_EXE_LINKER_FLAGS "${JMSD_CMAKE_LINKER_FLAGS_STR} ${JMSD_CMAKE_LINKER_FLAGS_RELEASE_STR} ${JMSD_CMAKE_EXE_LINKER_FLAGS_STR}" )

	else()
		message( SEND_ERROR "[JMSD] WINDOWS LINKER SETTINGS: linux-linker-settings.cmake: neither release nor debug" )

	endif()

#	message( STATUS "[JMSD] CMAKE_SHARED_LINKER_FLAGS: ${CMAKE_SHARED_LINKER_FLAGS}" )

else()
	message( SEND_ERROR "[JMSD] LINUX LINKER SETTINGS: linux-linker-settings.cmake is included while not on linux" )

endif()

JMSD_CMAKE_CURRENT_FILE_OUT( "linux-linker-settings.cmake" )
